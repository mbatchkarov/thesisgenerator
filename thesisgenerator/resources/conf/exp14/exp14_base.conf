name=tests-exp14
debug=False

training_data=thesisgenerator/resources/test-tr
test_data=thesisgenerator/resources/test-ev
output_dir=thesisgenerator/resources/conf/exp14/output

joblib_caching=False

min_test_features = 0
min_train_features = 0

[feature_extraction]
    run=True
    # CountVectorizer, TfIdfVectorizer
#     vectorizer=sklearn.feature_extraction.text.TfidfVectorizer
    vectorizer=thesisgenerator.plugins.bov.ThesaurusVectorizer
    #input_generator=utils.GorkanaXmlParser

    # All arguments that are passed to the Vectorizer class are converted to their
    # python type using ast.literal_eval. This requires the arguments whose correct
    # type is str to be enclosed in quotation marks. Arguments that are left empty
    # will use the default values set in the class constructor.
    input='content'
    decode_error=replace
    stop_words=english
    min_df=1
    analyzer=ngram

    sim_threshold=0
    k=50
    lemmatize=False
    use_pos=False
    coarse_pos=False
    use_tfidf=False
    record_stats=False
    use_signifier_only=True
    include_self=False

[tokenizer]
	lowercase= False

[crossvalidation]
    #if false, a single run with an 80/20 split is performed
    run=True
    # permitted values are 'kfold', 'skfold', 'loo', 'bootstrap' or 'oracle'. k-fold requires only the 'k' option (number of folds)
    # to be set. 'skfold' performs stratified k-fold. 'bootstrap' required both 'k' (number of bootstraps) and 'ratio'
    # (the proportion of the dataset to include in the train split, 0<ratio<1, the rest of the data is used for testing).
    # If 'oracle' the training data is used for testing too. subsampled_test_set requires k and sample_size
    type=subsampled_test_set
    k=3
    sample_size=2

[split_data]
    run=true
    stream_data=true

[feature_selection]
    run=False
    # the selection method should be one of the classes defined in
    # sklearn.feature_selection - any parameters the class initialiser takes
    # can be defined below and they will be dynamically assigned to the init call
    method=thesisgenerator.composers.feature_selectors.VectorBackedSelectKBest
    scoring_function=sklearn.feature_selection.chi2


[classifiers]
    [[thesisgenerator.classifiers.DataHashingNaiveBayes]]
		run=True

    [[thesisgenerator.classifiers.DataHashingLR]]
		run=True

[vector_sources]
	neighbours_file = thesisgenerator/resources/exp0-0a.strings
 	sim_threshold = 0
	include_self = False

[evaluation]
	[[thesisgenerator.classifiers.score_equals_prediction]]
		run=True