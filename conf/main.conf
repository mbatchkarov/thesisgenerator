[feature_extraction]
run=True
# CountVectorizer, TfIdfVectorizer 
vectorizer=bov.bov.MyVectorizer
input_generator =

# All arguments that are passed to the Vectorizer class are converted to their
# python type using ast.literal_eval. This requires the arguments whose correct
# type is str to be enclosed in quotation marks. Arguments that are left empty
# will use the default values set in the class constructor. 
input='content'
charset='utf-8'
charset_error='strict'
strip_accents='ascii'
lowercase=True
stop_words=None
token_pattern=
ngram_range=(1, 1)
min_n=None
max_n=
min_df=1
max_df=1e6
analyser=
preprocessor=
tokenizer=
lowercase=False
max_features=None
vocabulary=
binary=False
dtype=

#extra options required by the Bag-of-Vectors project Vectorizer
thesaurus='sample-data/thesaurus-fruit.strings'

[crossvalidation]
#if false, a single run with an 80/20 split is performed
run=True

# permitted values are 'kfold', 'skfold', 'loo', 'bootstrap' or 'oracle'. k-fold requires only the 'k' option (number of folds)
# to be set. 'skfold' performs stratified k-fold. 'bootstrap' required both 'k' (number of bootstraps) and 'ratio'
# (the proportion of the dataset to include in the train split, 0<ratio<1, the rest of the data is used for testing).
# If 'oracle' the training data is used for testing too
type=bootstrap
k=4
ratio=0.8

[split_data]
run=true
stream_data=true

[feature_selection]
run=true