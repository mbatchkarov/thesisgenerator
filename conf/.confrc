name=string()
debug=boolean(default=False)
joblib_caching=boolean(default=False)

[feature_extraction]
    run=boolean(default=True)
    vectorizer=string(default="")
    input_generator=string(default="")
	
	# The below options have defaults in the scikit Vectorizer init
    input=option('content', 'filename', 'file')
    charset=string
    charset_error=string
    strip_accents=string
    lowercase=boolean
    token_pattern=string
    min_n=integer
    max_n=integer
    min_df=integer
    max_df=integer
    analyser=string
    preprocessor=string
    tokenizer=string
    max_features=integer
    vocabulary=string
    binary=boolean
    
    # extra options required by the Bag-of-Vectors project Vectorizer
    thesaurus_files=list
    k=integer(min=0)
    sim_threshold=float
    lemmatize=boolean
    use_pos=boolean
	coarse_pos=boolean
	normalise_entities=boolean
	
[crossvalidation]
	run=boolean()
	type = option('kfold', 'skfold', 'loo', 'bootstrap', 'oracle', default = 'kfold')
	k=integer(min=1,max=100,default=1)
	ratio=float()
    sample_size=integer()
	
[split_data]
    run=boolean()
    stream_data=boolean()

[feature_selection]
    run=boolean()
    method=string
    scoring_function=string
    k=integer
    alpha=float
    percentile=int
    
[dimensionality_reduction]
    run=boolean(default=False)
    method=string(default=sklearn.decomposition.ProjectedGradientNMF)
    n_components=integer(min=0)
    whiten=boolean
    
[classifiers]
    [[sklearn.naive_bayes.MultinomialNB]]
    	# add the MultinomialNB parameters
    	run=boolean(default=False) 
	alpha=float()

    [[sklearn.neighbors.KNeighborsClassifier]]
    	run=boolean(default=False)
    	k=integer()

    [[sklearn.linear_model.LogisticRegression]]
		run=boolean(default=False)
		
    [[sklearn.svm.SVC]]
    	run=boolean(default=False)
    	kernel=option('linear','rbf', 'poly')

    [[sklearn.svm.LinearSVC]]
    	run=boolean(default=False)
    	
	[[classifiers.MostCommonLabelClassifier]]
	    run=boolean(default=False)
	    
[evaluation]
    [[sklearn.metrics.precision_score]]
        run=boolean(default=False)
		average=option('micro', 'macro', 'weighted', default=None)
	
	[[sklearn.metrics.recall_score]]
		run=boolean(default=False)
		average=option('micro', 'macro', 'weighted', default=None)
	
	[[sklearn.metrics.f1_score]]
		run=boolean(default=False)
        average=option('micro', 'macro', 'weighted', default=None)

	[[thesisgenerator.metrics.macroavg_prec]]
    	run=boolean
	
	[[thesisgenerator.metrics.macroavg_rec]]
    	run=boolean
	
	[[thesisgenerator.metrics.macroavg_f1]]
    	run=boolean

    [[thesisgenerator.metrics.microavg_prec]]
    	run=boolean
	
	[[thesisgenerator.metrics.microavg_rec]]
    	run=boolean
	
	[[thesisgenerator.metrics.microavg_f1]]
    	run=boolean
    	
    [[sklearn.metrics.accuracy_score]]
        run=boolean(default=False)
        
        
