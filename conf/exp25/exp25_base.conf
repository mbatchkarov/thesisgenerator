name=exp25
# if true, a bunch of debugging files will be produced
debug=False

training_data=sample-data/reuters21578/r8train-tagged-grouped
test_data=sample-data/reuters21578/r8test-tagged-grouped
output_dir=./conf/exp25/output

joblib_caching=False
    
[feature_extraction]
    run=True
 	vectorizer=thesisgenerator.plugins.bov.ThesaurusVectorizer
    
    input='content'
    charset=
    charset_error=replace
    strip_accents=
    
    stop_words=english
    token_pattern=
    ngram_range=
    min_n=
    max_n=
    min_df=1
    max_df=
    analyzer=     
    preprocessor=
    tokenizer=
    max_features=
    vocabulary=
    binary=
    dtype=
    
    constrain_vocabulary=True

    #extra options required by the Bag-of-Vectors project Vectorizer
    #comma-separated list; if only a single item is present you MUST add a comma at the end. Whitespace is ignored
    
    #thesaurus_files=exp6-12d.strings,
    thesaurus_files=/mnt/lustre/scratch/inf/mmb28/FeatureExtrationToolkit/exp6-12a/exp6.sims.neighbours.strings,/mnt/lustre/scratch/inf/mmb28/FeatureExtrationToolkit/exp6-12b/exp6.sims.neighbours.strings,/mnt/lustre/scratch/inf/mmb28/FeatureExtrationToolkit/exp6-12c/exp6.sims.neighbours.strings,/mnt/lustre/scratch/inf/mmb28/FeatureExtrationToolkit/exp6-12d/exp6.sims.neighbours.strings,
    sim_threshold=0.01
    k=1
    lemmatize=True
    use_pos=True
    coarse_pos=True
    normalise_entities=False
    use_tfidf=False        
	replace_all=False
	record_stats=True
	sim_compressor=thesisgenerator.utils.linear_compress
	decode_token_handler=thesisgenerator.plugins.bov_feature_handlers.BaseFeatureHandler
    
[tokenizer]
	lowercase=True
	keep_only_IT=False
	remove_stopwords=True
	remove_short_words=False

[crossvalidation]
    #if false, a single run with an 80/20 split is performed
    run=True
    # permitted values are 'kfold', 'skfold', 'loo', 'bootstrap' or 'oracle'. k-fold requires only the 'k' option (number of folds)
    # to be set. 'skfold' performs stratified k-fold. 'bootstrap' required both 'k' (number of bootstraps) and 'ratio'
    # (the proportion of the dataset to include in the train split, 0<ratio<1, the rest of the data is used for testing).
    # If 'oracle' the training data is used for testing too. subsampled_test_set requires k and sample_size
    type=subsampled_test_set
    k=25
    ratio=0.8
    sample_size=2
    random_state=0

	stream_data=true
	# seen_data_evaluator needs to be a callable that takes a list of x and y values
	validation_slices=#utils.gorkana_200_seen_positives_validation
	
[split_data]
    run=true
    stream_data=true

[feature_selection]
    run=False
    # the selection method should be one of the classes defined in
    # sklearn.feature_selection - any parameters the class initialiser takes
    # can be defined below and they will be dynamically assigned to the init call
    method=sklearn.feature_selection.SelectKBest
    scoring_function=sklearn.feature_selection.chi2
    k=1000
    
[dimensionality_reduction]
    run=False
    #alternatives: sklearn.decomposition.PCA/ ProjectedGradientNMF
    # PCA produces negative feature values (counts) which makes NaiveBayes rather upset
    method=sklearn.decomposition.ProjectedGradientNMF
    #must be less than each of the dimensions of the feature vector matrix
    n_components=5
    whiten=True #only applicable to PCA

[classifiers]
    [[sklearn.naive_bayes.BernoulliNB]]
		run=True
		alpha=0.001
		
    [[sklearn.naive_bayes.MultinomialNB]]
		run=True
		alpha=0.001

	[[thesisgenerator.classifiers.MultinomialNBWithBinaryFeatures]]
		run=True
		alpha=0.001
		threshold = 0.0
		
    [[sklearn.linear_model.LogisticRegression]]
		run=True

[evaluation]
	
	# the default setting for the sklearn's metrics is to work per-class
    [[sklearn.metrics.precision_score]]
        run=True
	
	[[sklearn.metrics.recall_score]]
		run=True	
	
	[[sklearn.metrics.f1_score]]
		run=True
        
    # these metrics wrap sklearn's own to provide micro/macro averaging on
    # the the per-class values provided by the metrics above
    [[thesisgenerator.metrics.macroavg_prec]]
    	run=True
	
	[[thesisgenerator.metrics.macroavg_rec]]
    	run=True
	
	[[thesisgenerator.metrics.macroavg_f1]]
    	run=True

    [[thesisgenerator.metrics.microavg_prec]]
    	run=True
	
	[[thesisgenerator.metrics.microavg_rec]]
    	run=True
	
	[[thesisgenerator.metrics.microavg_f1]]
    	run=True

    

# roc_curve runs weirdly in this model because it takes different params
# (y_true, y_predicted_prob) as opposed to (y_true, y_predicted_label),
# which is what cross_val_score assumes
